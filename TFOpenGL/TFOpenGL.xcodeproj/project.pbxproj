// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 50;
	objects = {

/* Begin PBXBuildFile section */
		62D0A88724BF46BB00DD1507 /* main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 62D0A88624BF46BB00DD1507 /* main.cpp */; };
		62D0A88D24BF474400DD1507 /* libGLEW.a in Frameworks */ = {isa = PBXBuildFile; fileRef = 62D0A88C24BF474400DD1507 /* libGLEW.a */; };
		62D0A88E24BF476200DD1507 /* libglfw.3.3.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 62EDC9A724BCAC0D0064C982 /* libglfw.3.3.dylib */; };
		62D0A88F24BF477B00DD1507 /* OpenGL.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 62EDC67224B8AEB20064C982 /* OpenGL.framework */; };
		62EDC66B24B8AE520064C982 /* main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 62EDC66A24B8AE520064C982 /* main.cpp */; };
		62EDC67324B8AEB20064C982 /* OpenGL.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = 62EDC67224B8AEB20064C982 /* OpenGL.framework */; };
		62EDC67724B8AED20064C982 /* libGLEW.2.1.0.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 62EDC67624B8AED20064C982 /* libGLEW.2.1.0.dylib */; };
		62EDC68524BB84A00064C982 /* main.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 62EDC68424BB84A00064C982 /* main.cpp */; };
		62EDC69324BB84FA0064C982 /* gl3w.c in Sources */ = {isa = PBXBuildFile; fileRef = 62EDC69124BB84CC0064C982 /* gl3w.c */; };
		62EDC9A624BCAADC0064C982 /* gl3w.c in Sources */ = {isa = PBXBuildFile; fileRef = 62EDC69124BB84CC0064C982 /* gl3w.c */; };
		62EDC9A824BCAC0D0064C982 /* libglfw.3.3.dylib in Frameworks */ = {isa = PBXBuildFile; fileRef = 62EDC9A724BCAC0D0064C982 /* libglfw.3.3.dylib */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		62D0A88224BF46BB00DD1507 /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
		62EDC66524B8AE510064C982 /* Copy Files */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			name = "Copy Files";
			runOnlyForDeploymentPostprocessing = 1;
		};
		62EDC68024BB84A00064C982 /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		62D0A88424BF46BB00DD1507 /* TF */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = TF; sourceTree = BUILT_PRODUCTS_DIR; };
		62D0A88624BF46BB00DD1507 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		62D0A88C24BF474400DD1507 /* libGLEW.a */ = {isa = PBXFileReference; lastKnownFileType = archive.ar; name = libGLEW.a; path = ../../../../../../../../usr/local/Cellar/glew/2.1.0/lib/libGLEW.a; sourceTree = "<group>"; };
		62EDC66724B8AE510064C982 /* TFOpenGL */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = TFOpenGL; sourceTree = BUILT_PRODUCTS_DIR; };
		62EDC66A24B8AE520064C982 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		62EDC67224B8AEB20064C982 /* OpenGL.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = OpenGL.framework; path = System/Library/Frameworks/OpenGL.framework; sourceTree = SDKROOT; };
		62EDC67424B8AEB80064C982 /* GLKit.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = GLKit.framework; path = System/Library/Frameworks/GLKit.framework; sourceTree = SDKROOT; };
		62EDC67624B8AED20064C982 /* libGLEW.2.1.0.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = libGLEW.2.1.0.dylib; path = ../../../../../../../usr/local/Cellar/glew/2.1.0/lib/libGLEW.2.1.0.dylib; sourceTree = "<group>"; };
		62EDC68224BB84A00064C982 /* TFQN */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = TFQN; sourceTree = BUILT_PRODUCTS_DIR; };
		62EDC68424BB84A00064C982 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		62EDC68C24BB84CC0064C982 /* gl3w.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = gl3w.h; sourceTree = "<group>"; };
		62EDC68D24BB84CC0064C982 /* glcorearb.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = glcorearb.h; sourceTree = "<group>"; };
		62EDC68F24BB84CC0064C982 /* khrplatform.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = khrplatform.h; sourceTree = "<group>"; };
		62EDC69124BB84CC0064C982 /* gl3w.c */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.c; path = gl3w.c; sourceTree = "<group>"; };
		62EDC9A724BCAC0D0064C982 /* libglfw.3.3.dylib */ = {isa = PBXFileReference; lastKnownFileType = "compiled.mach-o.dylib"; name = libglfw.3.3.dylib; path = ../../../../../../../../usr/local/Cellar/glfw/3.3/lib/libglfw.3.3.dylib; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		62D0A88124BF46BB00DD1507 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				62D0A88F24BF477B00DD1507 /* OpenGL.framework in Frameworks */,
				62D0A88E24BF476200DD1507 /* libglfw.3.3.dylib in Frameworks */,
				62D0A88D24BF474400DD1507 /* libGLEW.a in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		62EDC66424B8AE510064C982 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				62EDC67724B8AED20064C982 /* libGLEW.2.1.0.dylib in Frameworks */,
				62EDC67324B8AEB20064C982 /* OpenGL.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		62EDC67F24BB84A00064C982 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
				62EDC9A824BCAC0D0064C982 /* libglfw.3.3.dylib in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		62D0A88524BF46BB00DD1507 /* TF */ = {
			isa = PBXGroup;
			children = (
				62D0A88624BF46BB00DD1507 /* main.cpp */,
			);
			path = TF;
			sourceTree = "<group>";
		};
		62EDC65E24B8AE510064C982 = {
			isa = PBXGroup;
			children = (
				62EDC68924BB84CC0064C982 /* gl3w */,
				62EDC66924B8AE510064C982 /* TFOpenGL */,
				62EDC68324BB84A00064C982 /* TFQN */,
				62D0A88524BF46BB00DD1507 /* TF */,
				62EDC66824B8AE510064C982 /* Products */,
				62EDC67124B8AEB20064C982 /* Frameworks */,
			);
			sourceTree = "<group>";
		};
		62EDC66824B8AE510064C982 /* Products */ = {
			isa = PBXGroup;
			children = (
				62EDC66724B8AE510064C982 /* TFOpenGL */,
				62EDC68224BB84A00064C982 /* TFQN */,
				62D0A88424BF46BB00DD1507 /* TF */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		62EDC66924B8AE510064C982 /* TFOpenGL */ = {
			isa = PBXGroup;
			children = (
				62EDC66A24B8AE520064C982 /* main.cpp */,
			);
			path = TFOpenGL;
			sourceTree = "<group>";
		};
		62EDC67124B8AEB20064C982 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
				62D0A88C24BF474400DD1507 /* libGLEW.a */,
				62EDC9A724BCAC0D0064C982 /* libglfw.3.3.dylib */,
				62EDC67624B8AED20064C982 /* libGLEW.2.1.0.dylib */,
				62EDC67424B8AEB80064C982 /* GLKit.framework */,
				62EDC67224B8AEB20064C982 /* OpenGL.framework */,
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
		62EDC68324BB84A00064C982 /* TFQN */ = {
			isa = PBXGroup;
			children = (
				62EDC68424BB84A00064C982 /* main.cpp */,
			);
			path = TFQN;
			sourceTree = "<group>";
		};
		62EDC68924BB84CC0064C982 /* gl3w */ = {
			isa = PBXGroup;
			children = (
				62EDC68A24BB84CC0064C982 /* include */,
				62EDC69024BB84CC0064C982 /* src */,
			);
			path = gl3w;
			sourceTree = "<group>";
		};
		62EDC68A24BB84CC0064C982 /* include */ = {
			isa = PBXGroup;
			children = (
				62EDC68B24BB84CC0064C982 /* GL */,
				62EDC68E24BB84CC0064C982 /* KHR */,
			);
			path = include;
			sourceTree = "<group>";
		};
		62EDC68B24BB84CC0064C982 /* GL */ = {
			isa = PBXGroup;
			children = (
				62EDC68C24BB84CC0064C982 /* gl3w.h */,
				62EDC68D24BB84CC0064C982 /* glcorearb.h */,
			);
			path = GL;
			sourceTree = "<group>";
		};
		62EDC68E24BB84CC0064C982 /* KHR */ = {
			isa = PBXGroup;
			children = (
				62EDC68F24BB84CC0064C982 /* khrplatform.h */,
			);
			path = KHR;
			sourceTree = "<group>";
		};
		62EDC69024BB84CC0064C982 /* src */ = {
			isa = PBXGroup;
			children = (
				62EDC69124BB84CC0064C982 /* gl3w.c */,
			);
			path = src;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		62D0A88324BF46BB00DD1507 /* TF */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 62D0A88A24BF46BB00DD1507 /* Build configuration list for PBXNativeTarget "TF" */;
			buildPhases = (
				62D0A88024BF46BB00DD1507 /* Sources */,
				62D0A88124BF46BB00DD1507 /* Frameworks */,
				62D0A88224BF46BB00DD1507 /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = TF;
			productName = TF;
			productReference = 62D0A88424BF46BB00DD1507 /* TF */;
			productType = "com.apple.product-type.tool";
		};
		62EDC66624B8AE510064C982 /* TFOpenGL */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 62EDC66E24B8AE520064C982 /* Build configuration list for PBXNativeTarget "TFOpenGL" */;
			buildPhases = (
				62EDC66324B8AE510064C982 /* Sources */,
				62EDC66424B8AE510064C982 /* Frameworks */,
				62EDC66524B8AE510064C982 /* Copy Files */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = TFOpenGL;
			productName = TFOpenGL;
			productReference = 62EDC66724B8AE510064C982 /* TFOpenGL */;
			productType = "com.apple.product-type.tool";
		};
		62EDC68124BB84A00064C982 /* TFQN */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 62EDC68624BB84A00064C982 /* Build configuration list for PBXNativeTarget "TFQN" */;
			buildPhases = (
				62EDC67E24BB84A00064C982 /* Sources */,
				62EDC67F24BB84A00064C982 /* Frameworks */,
				62EDC68024BB84A00064C982 /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = TFQN;
			productName = TFQN;
			productReference = 62EDC68224BB84A00064C982 /* TFQN */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		62EDC65F24B8AE510064C982 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 1130;
				ORGANIZATIONNAME = charles;
				TargetAttributes = {
					62D0A88324BF46BB00DD1507 = {
						CreatedOnToolsVersion = 11.3.1;
					};
					62EDC66624B8AE510064C982 = {
						CreatedOnToolsVersion = 11.3.1;
					};
					62EDC68124BB84A00064C982 = {
						CreatedOnToolsVersion = 11.3.1;
					};
				};
			};
			buildConfigurationList = 62EDC66224B8AE510064C982 /* Build configuration list for PBXProject "TFOpenGL" */;
			compatibilityVersion = "Xcode 9.3";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 62EDC65E24B8AE510064C982;
			productRefGroup = 62EDC66824B8AE510064C982 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				62EDC66624B8AE510064C982 /* TFOpenGL */,
				62EDC68124BB84A00064C982 /* TFQN */,
				62D0A88324BF46BB00DD1507 /* TF */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		62D0A88024BF46BB00DD1507 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				62D0A88724BF46BB00DD1507 /* main.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		62EDC66324B8AE510064C982 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				62EDC69324BB84FA0064C982 /* gl3w.c in Sources */,
				62EDC66B24B8AE520064C982 /* main.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		62EDC67E24BB84A00064C982 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				62EDC9A624BCAADC0064C982 /* gl3w.c in Sources */,
				62EDC68524BB84A00064C982 /* main.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		62D0A88824BF46BB00DD1507 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		62D0A88924BF46BB00DD1507 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
		62EDC66C24B8AE520064C982 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				HEADER_SEARCH_PATHS = (
					"$(PROJECT_DIR)/gl3w/include",
					"$(glew_header)",
					"$(glfw_header)",
				);
				LIBRARY_SEARCH_PATHS = (
					"$(PROJECT_DIR)/gl3w/src",
					/usr/local/Cellar/glew/2.1.0/lib,
					/usr/local/Cellar/glfw/3.3/lib,
				);
				MACOSX_DEPLOYMENT_TARGET = 10.15;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
			};
			name = Debug;
		};
		62EDC66D24B8AE520064C982 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				HEADER_SEARCH_PATHS = (
					"$(PROJECT_DIR)/gl3w/include",
					"$(glew_header)",
					"$(glfw_header)",
				);
				LIBRARY_SEARCH_PATHS = (
					"$(PROJECT_DIR)/gl3w/src",
					/usr/local/Cellar/glew/2.1.0/lib,
					/usr/local/Cellar/glfw/3.3/lib,
				);
				MACOSX_DEPLOYMENT_TARGET = 10.15;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = macosx;
			};
			name = Release;
		};
		62EDC66F24B8AE520064C982 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				FRAMEWORK_SEARCH_PATHS = (
					"#include",
					"<stdio.h>\n#include",
					"<stdlib.h>\n#include",
					"<GL/gl3w.h>\n#include",
					"<GLFW/glfw3.h>\n\nstatic",
					int,
					width,
					"=",
					"600,",
					height,
					"=",
					"600;\n\nstatic",
					float,
					"randf()\n{\n",
					return,
					"(float)",
					"rand()",
					/,
					"((float)",
					RAND_MAX,
					"+",
					"1);\n}\n\nstatic",
					void,
					"display(GLFWwindow",
					"*window)\n{\n",
					"glClearColor(randf(),",
					"randf(),",
					"randf(),",
					"1.0f);\n",
					"glClear(GL_COLOR_BUFFER_BIT",
					"|",
					"GL_DEPTH_BUFFER_BIT);\n",
					"glfwSwapBuffers(window);\n}\n\nstatic",
					void,
					"reshape(GLFWwindow",
					"*window,",
					int,
					"w,",
					int,
					"h)
{
",
					width,
					"=",
					w,
					">",
					1,
					"?",
					w,
					":",
					"1;
",
					height,
					"=",
					h,
					">",
					1,
					"?",
					h,
					":",
					"1;
",
					"glViewport(0,",
					"0,",
					"width,",
					"height);\n",
					"glClearDepth(1.0);\n",
					"glClearColor(0.0f,",
					"0.0f,",
					"0.0f,",
					"0.0f);\n",
					"glEnable(GL_DEPTH_TEST);\n}\n\nint",
					"main(int",
					"argc,",
					char,
					"**argv)\n{\n",
					GLFWwindow,
					"*window;\n\n",
					"glfwInit();\n\n",
					"glfwWindowHint(GLFW_OPENGL_PROFILE,",
					"GLFW_OPENGL_CORE_PROFILE);\n",
					"glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR,",
					"3);
",
					"glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR,",
					"2);
",
					"glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT,",
					"GL_TRUE);\n",
					window,
					"=",
					"glfwCreateWindow(width,",
					"height,",
					"\"cookie\",",
					"NULL,",
					"NULL);\n\n",
					"glfwSetFramebufferSizeCallback(window,",
					"reshape);\n",
					"glfwSetWindowRefreshCallback(window,",
					"display);\n\n",
					"glfwMakeContextCurrent(window);\n\n",
					if,
					"(gl3wInit())",
					"{
",
					"fprintf(stderr,",
					"\"failed to initialize OpenGL\\n\");\n",
					return,
					"-1;
",
					"}
",
					if,
					"(!gl3wIsSupported(3,",
					"2))",
					"{
",
					"fprintf(stderr,",
					"\"OpenGL 3.2 not supported\\n\");\n",
					return,
					"-1;
",
					"}
",
					"printf(\"OpenGL %s, GLSL %s\\n\",",
					"glGetString(GL_VERSION),\n",
					"glGetString(GL_SHADING_LANGUAGE_VERSION));\n\n",
					while,
					"(!glfwWindowShouldClose(window))",
					"{
",
					"display(window);\n",
					"glfwPollEvents();\n",
					"}

",
					"glfwTerminate();\n",
					return,
					"0;\n}\n#include",
					"<stdio.h>\n#include",
					"<stdlib.h>\n#include",
					"<GL/gl3w.h>\n#include",
					"<GLFW/glfw3.h>\n\nstatic",
					int,
					width,
					"=",
					"600,",
					height,
					"=",
					"600;\n\nstatic",
					float,
					"randf()\n{\n",
					return,
					"(float)",
					"rand()",
					/,
					"((float)",
					RAND_MAX,
					"+",
					"1);\n}\n\nstatic",
					void,
					"display(GLFWwindow",
					"*window)\n{\n",
					"glClearColor(randf(),",
					"randf(),",
					"randf(),",
					"1.0f);\n",
					"glClear(GL_COLOR_BUFFER_BIT",
					"|",
					"GL_DEPTH_BUFFER_BIT);\n",
					"glfwSwapBuffers(window);\n}\n\nstatic",
					void,
					"reshape(GLFWwindow",
					"*window,",
					int,
					"w,",
					int,
					"h)
{
",
					width,
					"=",
					w,
					">",
					1,
					"?",
					w,
					":",
					"1;
",
					height,
					"=",
					h,
					">",
					1,
					"?",
					h,
					":",
					"1;
",
					"glViewport(0,",
					"0,",
					"width,",
					"height);\n",
					"glClearDepth(1.0);\n",
					"glClearColor(0.0f,",
					"0.0f,",
					"0.0f,",
					"0.0f);\n",
					"glEnable(GL_DEPTH_TEST);\n}\n\nint",
					"main(int",
					"argc,",
					char,
					"**argv)\n{\n",
					GLFWwindow,
					"*window;\n\n",
					"glfwInit();\n\n",
					"glfwWindowHint(GLFW_OPENGL_PROFILE,",
					"GLFW_OPENGL_CORE_PROFILE);\n",
					"glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR,",
					"3);
",
					"glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR,",
					"2);
",
					"glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT,",
					"GL_TRUE);\n",
					window,
					"=",
					"glfwCreateWindow(width,",
					"height,",
					"\"cookie\",",
					"NULL,",
					"NULL);\n\n",
					"glfwSetFramebufferSizeCallback(window,",
					"reshape);\n",
					"glfwSetWindowRefreshCallback(window,",
					"display);\n\n",
					"glfwMakeContextCurrent(window);\n\n",
					if,
					"(gl3wInit())",
					"{
",
					"fprintf(stderr,",
					"\"failed to initialize OpenGL\\n\");\n",
					return,
					"-1;
",
					"}
",
					if,
					"(!gl3wIsSupported(3,",
					"2))",
					"{
",
					"fprintf(stderr,",
					"\"OpenGL 3.2 not supported\\n\");\n",
					return,
					"-1;
",
					"}
",
					"printf(\"OpenGL %s, GLSL %s\\n\",",
					"glGetString(GL_VERSION),\n",
					"glGetString(GL_SHADING_LANGUAGE_VERSION));\n\n",
					while,
					"(!glfwWindowShouldClose(window))",
					"{
",
					"display(window);\n",
					"glfwPollEvents();\n",
					"}

",
					"glfwTerminate();\n",
					return,
					"0;
}
",
				);
				GCC_WARN_ABOUT_DEPRECATED_FUNCTIONS = NO;
				HEADER_SEARCH_PATHS = "$(inherited)";
				LIBRARY_SEARCH_PATHS = "$(inherited)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				USER_HEADER_SEARCH_PATHS = "";
			};
			name = Debug;
		};
		62EDC67024B8AE520064C982 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				FRAMEWORK_SEARCH_PATHS = (
					"#include",
					"<stdio.h>\n#include",
					"<stdlib.h>\n#include",
					"<GL/gl3w.h>\n#include",
					"<GLFW/glfw3.h>\n\nstatic",
					int,
					width,
					"=",
					"600,",
					height,
					"=",
					"600;\n\nstatic",
					float,
					"randf()\n{\n",
					return,
					"(float)",
					"rand()",
					/,
					"((float)",
					RAND_MAX,
					"+",
					"1);\n}\n\nstatic",
					void,
					"display(GLFWwindow",
					"*window)\n{\n",
					"glClearColor(randf(),",
					"randf(),",
					"randf(),",
					"1.0f);\n",
					"glClear(GL_COLOR_BUFFER_BIT",
					"|",
					"GL_DEPTH_BUFFER_BIT);\n",
					"glfwSwapBuffers(window);\n}\n\nstatic",
					void,
					"reshape(GLFWwindow",
					"*window,",
					int,
					"w,",
					int,
					"h)
{
",
					width,
					"=",
					w,
					">",
					1,
					"?",
					w,
					":",
					"1;
",
					height,
					"=",
					h,
					">",
					1,
					"?",
					h,
					":",
					"1;
",
					"glViewport(0,",
					"0,",
					"width,",
					"height);\n",
					"glClearDepth(1.0);\n",
					"glClearColor(0.0f,",
					"0.0f,",
					"0.0f,",
					"0.0f);\n",
					"glEnable(GL_DEPTH_TEST);\n}\n\nint",
					"main(int",
					"argc,",
					char,
					"**argv)\n{\n",
					GLFWwindow,
					"*window;\n\n",
					"glfwInit();\n\n",
					"glfwWindowHint(GLFW_OPENGL_PROFILE,",
					"GLFW_OPENGL_CORE_PROFILE);\n",
					"glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR,",
					"3);
",
					"glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR,",
					"2);
",
					"glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT,",
					"GL_TRUE);\n",
					window,
					"=",
					"glfwCreateWindow(width,",
					"height,",
					"\"cookie\",",
					"NULL,",
					"NULL);\n\n",
					"glfwSetFramebufferSizeCallback(window,",
					"reshape);\n",
					"glfwSetWindowRefreshCallback(window,",
					"display);\n\n",
					"glfwMakeContextCurrent(window);\n\n",
					if,
					"(gl3wInit())",
					"{
",
					"fprintf(stderr,",
					"\"failed to initialize OpenGL\\n\");\n",
					return,
					"-1;
",
					"}
",
					if,
					"(!gl3wIsSupported(3,",
					"2))",
					"{
",
					"fprintf(stderr,",
					"\"OpenGL 3.2 not supported\\n\");\n",
					return,
					"-1;
",
					"}
",
					"printf(\"OpenGL %s, GLSL %s\\n\",",
					"glGetString(GL_VERSION),\n",
					"glGetString(GL_SHADING_LANGUAGE_VERSION));\n\n",
					while,
					"(!glfwWindowShouldClose(window))",
					"{
",
					"display(window);\n",
					"glfwPollEvents();\n",
					"}

",
					"glfwTerminate();\n",
					return,
					"0;\n}\n#include",
					"<stdio.h>\n#include",
					"<stdlib.h>\n#include",
					"<GL/gl3w.h>\n#include",
					"<GLFW/glfw3.h>\n\nstatic",
					int,
					width,
					"=",
					"600,",
					height,
					"=",
					"600;\n\nstatic",
					float,
					"randf()\n{\n",
					return,
					"(float)",
					"rand()",
					/,
					"((float)",
					RAND_MAX,
					"+",
					"1);\n}\n\nstatic",
					void,
					"display(GLFWwindow",
					"*window)\n{\n",
					"glClearColor(randf(),",
					"randf(),",
					"randf(),",
					"1.0f);\n",
					"glClear(GL_COLOR_BUFFER_BIT",
					"|",
					"GL_DEPTH_BUFFER_BIT);\n",
					"glfwSwapBuffers(window);\n}\n\nstatic",
					void,
					"reshape(GLFWwindow",
					"*window,",
					int,
					"w,",
					int,
					"h)
{
",
					width,
					"=",
					w,
					">",
					1,
					"?",
					w,
					":",
					"1;
",
					height,
					"=",
					h,
					">",
					1,
					"?",
					h,
					":",
					"1;
",
					"glViewport(0,",
					"0,",
					"width,",
					"height);\n",
					"glClearDepth(1.0);\n",
					"glClearColor(0.0f,",
					"0.0f,",
					"0.0f,",
					"0.0f);\n",
					"glEnable(GL_DEPTH_TEST);\n}\n\nint",
					"main(int",
					"argc,",
					char,
					"**argv)\n{\n",
					GLFWwindow,
					"*window;\n\n",
					"glfwInit();\n\n",
					"glfwWindowHint(GLFW_OPENGL_PROFILE,",
					"GLFW_OPENGL_CORE_PROFILE);\n",
					"glfwWindowHint(GLFW_CONTEXT_VERSION_MAJOR,",
					"3);
",
					"glfwWindowHint(GLFW_CONTEXT_VERSION_MINOR,",
					"2);
",
					"glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT,",
					"GL_TRUE);\n",
					window,
					"=",
					"glfwCreateWindow(width,",
					"height,",
					"\"cookie\",",
					"NULL,",
					"NULL);\n\n",
					"glfwSetFramebufferSizeCallback(window,",
					"reshape);\n",
					"glfwSetWindowRefreshCallback(window,",
					"display);\n\n",
					"glfwMakeContextCurrent(window);\n\n",
					if,
					"(gl3wInit())",
					"{
",
					"fprintf(stderr,",
					"\"failed to initialize OpenGL\\n\");\n",
					return,
					"-1;
",
					"}
",
					if,
					"(!gl3wIsSupported(3,",
					"2))",
					"{
",
					"fprintf(stderr,",
					"\"OpenGL 3.2 not supported\\n\");\n",
					return,
					"-1;
",
					"}
",
					"printf(\"OpenGL %s, GLSL %s\\n\",",
					"glGetString(GL_VERSION),\n",
					"glGetString(GL_SHADING_LANGUAGE_VERSION));\n\n",
					while,
					"(!glfwWindowShouldClose(window))",
					"{
",
					"display(window);\n",
					"glfwPollEvents();\n",
					"}

",
					"glfwTerminate();\n",
					return,
					"0;
}
",
				);
				GCC_WARN_ABOUT_DEPRECATED_FUNCTIONS = NO;
				HEADER_SEARCH_PATHS = "$(inherited)";
				LIBRARY_SEARCH_PATHS = "$(inherited)";
				PRODUCT_NAME = "$(TARGET_NAME)";
				USER_HEADER_SEARCH_PATHS = "";
			};
			name = Release;
		};
		62EDC68724BB84A00064C982 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				LIBRARY_SEARCH_PATHS = (
					/usr/local/Cellar/glew/2.1.0/lib,
					/usr/local/Cellar/glfw/3.3/lib,
				);
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		62EDC68824BB84A00064C982 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				LIBRARY_SEARCH_PATHS = (
					/usr/local/Cellar/glew/2.1.0/lib,
					/usr/local/Cellar/glfw/3.3/lib,
				);
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		62D0A88A24BF46BB00DD1507 /* Build configuration list for PBXNativeTarget "TF" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				62D0A88824BF46BB00DD1507 /* Debug */,
				62D0A88924BF46BB00DD1507 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		62EDC66224B8AE510064C982 /* Build configuration list for PBXProject "TFOpenGL" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				62EDC66C24B8AE520064C982 /* Debug */,
				62EDC66D24B8AE520064C982 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		62EDC66E24B8AE520064C982 /* Build configuration list for PBXNativeTarget "TFOpenGL" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				62EDC66F24B8AE520064C982 /* Debug */,
				62EDC67024B8AE520064C982 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		62EDC68624BB84A00064C982 /* Build configuration list for PBXNativeTarget "TFQN" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				62EDC68724BB84A00064C982 /* Debug */,
				62EDC68824BB84A00064C982 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 62EDC65F24B8AE510064C982 /* Project object */;
}
